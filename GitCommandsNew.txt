# modifizierte Dateien (getrackte) in den Stage überführen und gleichzeitig commiten
git commit -am "Commit message"

# auflisten aller getrackten Files
git ls-files

# rekursives Adden | mehrere Unterordner mit Dateien
git add .

# Datei aus der Staging Area entfernen
git reset HEAD [NAME_DER_DATEI]

# Datei Inhalt auf letzten Commit setzen
git checkout -- [FILE_NAME]

# Datei löschen
git rm [FILE_NAME]

# Commit History anzeigen
git log 

# bessere anzeige
git log --oneline --graph --decorate

# Datei History 
git log -- [Dateiname]

# Adden
git add -A   # stages ALL
git add .    # stages new and modified, without deleted
git add -u   # stages modified and deleted, without new

# Git Config einstellen
git config --global -e

# Git Difftool verwenden
# --- Lokale Vergleiche ---
# Vergleich Working Directory vs Staging Area
git difftool
# Vergleich Working Directory vs Git Repo HEAD
git difftool HEAD
# Vergleich Staging vs Git Repo
git difftool --staged HEAD

# Vergleich zwischen Commits
# Commit ID herausfinden ( git log --oneline )
git difftool ID HEAD oder git difftool HEAD HEAD^ (HEAD und der vorherige)

# --- Lokal vs Remote ---
git difftool master origin/master

